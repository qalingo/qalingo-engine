<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.hoteia.qalingo</groupId>
		<artifactId>qalingo-misc</artifactId>
		<version>0.9.1-SNAPSHOT</version>
	</parent>
	<artifactId>qalingo-sql</artifactId>
	<packaging>jar</packaging>
	<name>{Q} Commerce Solution SQL</name>
	<description>{Q} Commerce Solution SQL</description>
	<url>http://www.qalingo.com</url>
	<organization>
		<name>Hoteia</name>
		<url>http://www.hoteia.com</url>
	</organization>
	
	<properties> 
		<root.basedir>${project.parent.parent.basedir}</root.basedir>
	</properties>

	<build>
		<finalName>sql</finalName>
		<plugins>
			<!--
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<configuration>                  
					<propertyFile>src/main/resources/liquibase/liquibase.properties</propertyFile>
					<driver>com.mysql.jdbc.Driver</driver>
					<url>${jdbc.url}</url>
					<username>${jdbc.username}</username>
					<password>${jdbc.password}</password>
				</configuration>                
				<executions>
					<execution>
						<phase>process-resources</phase>                                                                  
						<goals>
							<goal>updateSQL</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>8.0.28</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>com.mysql.jdbc.Driver</driver>
					<url>${jdbc.url}</url>
					<username>${jdbc.username}</username>
					<password>${jdbc.password}</password>
				</configuration>
				<executions>
					<execution>
						<id>drop-db</id>
						<phase>package</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<!-- need another database to drop the targeted one -->
							<skip>${skip-setup-mysql}</skip>
							<url>${jdbc.url.root}</url>
							<username>${jdbc.username.root}</username>
							<password>${jdbc.password.root}</password>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>src/main/resources/sql/mysql/drop-database-qalingo.sql</srcFile>
							</srcFiles>
							<!-- ignore error when database is not avaiable -->
							<onError>continue</onError>
						</configuration>
					</execution>
					<execution>
						<id>create-db</id>
						<phase>package</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<!-- need another database to create the targeted one -->
							<skip>${skip-setup-mysql}</skip>
							<url>${jdbc.url.root}</url>
							<username>${jdbc.username.root}</username>
							<password>${jdbc.password.root}</password>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>src/main/resources/sql/mysql/create-database-qalingo.sql</srcFile>
							</srcFiles>
							<!-- ignore error when database is not avaiable -->
							<onError>continue</onError>
						</configuration>
					</execution>
					<execution>
						<id>grant-privileges</id>
						<phase>package</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<!-- need another database to create the targeted one -->
							<skip>${skip-setup-mysql}</skip>
							<url>${jdbc.url.root}</url>
							<username>${jdbc.username.root}</username>
							<password>${jdbc.password.root}</password>
							<autocommit>true</autocommit>
							<sqlCommand>
							GRANT ALL PRIVILEGES ON opentailor.* TO '${jdbc.username}'@'localhost' IDENTIFIED BY '${jdbc.password}' WITH GRANT OPTION;
							GRANT ALL PRIVILEGES ON opentailor.* TO '${jdbc.username}'@'%' IDENTIFIED BY '${jdbc.password}' WITH GRANT OPTION;
							FLUSH PRIVILEGES;
							</sqlCommand>
							<!-- ignore error when database is not avaiable -->
							<onError>continue</onError>
						</configuration>
					</execution>

					<execution>
						<id>init-db</id>
						<phase>package</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<skip>${skip-setup-mysql}</skip>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>src/main/resources/sql/${database.type}/qalingo-schema.sql</srcFile>
								<srcFile>src/main/resources/sql/${database.type}/spring-batch-schema.sql</srcFile>
								<srcFile>src/main/resources/sql/${database.type}/init-core-values.sql</srcFile>
							</srcFiles>
							<!-- ignore error when database is not avaiable -->
							<onError>continue</onError>
						</configuration>
					</execution>
					<execution>
						<id>init-demo-db</id>
						<phase>install</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<skip>${skip-setup-mysql}</skip>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>src/main/resources/sql/${database.type}/init-demo-values-coffee.sql</srcFile>
							</srcFiles>
							<!-- ignore error when database is not avaiable -->
							<onError>continue</onError>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.liquibase</groupId>
					<artifactId>liquibase-maven-plugin</artifactId>
					<version>3.0.5</version>
					<dependencies>
						<dependency>
							<groupId>mysql</groupId>
							<artifactId>mysql-connector-java</artifactId>
							<version>8.0.28</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sql-maven-plugin</artifactId>
					<version>1.5</version>
					<dependencies>
						<dependency>
							<groupId>mysql</groupId>
							<artifactId>mysql-connector-java</artifactId>
							<version>8.0.28</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
